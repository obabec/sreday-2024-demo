apiVersion: v1
kind: ConfigMap
metadata:
  name: database-manipulation-tool-cm
data:
  data.source.redis.host: "redis-service"
  data.source.redis.pool.max: "10"
  data.source.redis.port: "6379"
  executor.size: "1"
  onstart.reset.database: "true"
  quarkus.datasource.mysql.enabled: "false"
  quarkus.datasource.postgresql.db-kind: "postgresql"
  quarkus.datasource.postgresql.jdbc.url: "jdbc:postgresql://postgresql:5432/sredays?user=postgres&password=postgres"
  quarkus.datasource.postgresql.enabled: "true"
  quarkus.log.file.enable: "true"
  quarkus.log.file.path: "logging/dmt.log"
  quarkus.log.level: "INFO"
  quarkus.mongodb.main.enabled: "false"
  quarkus.vertx.max-event-loop-execute-time: "1000"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: database-manipulation-tool
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: quarkus
  name: database-manipulation-tool
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: database-manipulation-tool
    app.kubernetes.io/version: 1.0.0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: quarkus
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/name: database-manipulation-tool
  name: database-manipulation-tool
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/version: 1.0.0
      app.kubernetes.io/name: database-manipulation-tool
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: quarkus
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/name: database-manipulation-tool
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: quay.io/skodjob/database-manipulation-tool:classic-kubernetes
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: database-manipulation-tool
          envFrom:
            - configMapRef:
                name: database-manipulation-tool-cm
                optional: false
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10